-- SQL Script for PostgreSQL
-- Target Database: (Assumes you are connected to the database you want to create these tables in)
-- Please create the database separately before running this script.
-- Example:
--   psql postgres
--   CREATE DATABASE shbfc_dwh;
--   \c shbfc_dwh
--   Then run this script using \i '/path/to/this/file.sql'

-- Drop tables if they exist (optional, for a clean setup)
DROP TABLE IF EXISTS DEBT_CUSTOMER_ALLOCATED_HIST CASCADE;
DROP TABLE IF EXISTS DEBT_LD_PAID_HISTORY CASCADE;
DROP TABLE IF EXISTS DEBT_LD_REPAY_SCHEDULE CASCADE;
DROP TABLE IF EXISTS DEBT_CUSTOMER_LD_DETAIL CASCADE;
DROP TABLE IF EXISTS DEBT_CUSTOMERS CASCADE;

-- -----------------------------------------------------
-- Table DEBT_CUSTOMERS
-- Description: Static & dynamic customer profile
-- -----------------------------------------------------
CREATE TABLE DEBT_CUSTOMERS (
  CUSTOMER_ID NUMERIC PRIMARY KEY,
  HO_TEN_DAY_DU VARCHAR(250),
  SO_CMND_THE_CAN_CUOC VARCHAR(50) UNIQUE,
  SO_DIEN_THOAI VARCHAR(50) UNIQUE,
  EMAIL VARCHAR(100),
  DU_NO NUMERIC,
  DU_NO_LAI NUMERIC,
  BUCKET_CODE VARCHAR(20)
);

COMMENT ON TABLE DEBT_CUSTOMERS IS 'Static & dynamic customer profile';
COMMENT ON COLUMN DEBT_CUSTOMERS.CUSTOMER_ID IS 'Customer''s unique identifier';
COMMENT ON COLUMN DEBT_CUSTOMERS.HO_TEN_DAY_DU IS 'Customer''s full name';
COMMENT ON COLUMN DEBT_CUSTOMERS.SO_CMND_THE_CAN_CUOC IS 'Customer''s ID card number';
COMMENT ON COLUMN DEBT_CUSTOMERS.SO_DIEN_THOAI IS 'Customer''s phone number';
COMMENT ON COLUMN DEBT_CUSTOMERS.EMAIL IS 'Customer''s email address';
COMMENT ON COLUMN DEBT_CUSTOMERS.DU_NO IS 'Total outstanding principal amount for the customer';
COMMENT ON COLUMN DEBT_CUSTOMERS.DU_NO_LAI IS 'Total outstanding interest amount for the customer';
COMMENT ON COLUMN DEBT_CUSTOMERS.BUCKET_CODE IS 'Customer''s current debt bucket code';

-- -----------------------------------------------------
-- Table DEBT_CUSTOMER_LD_DETAIL
-- Description: Master loan contract details per customer
-- -----------------------------------------------------
CREATE TABLE DEBT_CUSTOMER_LD_DETAIL (
  SO_HOP_DONG VARCHAR(15) PRIMARY KEY,
  CUSTOMER_ID NUMERIC REFERENCES DEBT_CUSTOMERS(CUSTOMER_ID),
  LD_NO VARCHAR(20), -- Loan Number
  LD_DI_NO VARCHAR(5), -- Disbursement Number
  KY_HAN_VAY NUMERIC, -- Loan term in months or days
  LAI_SUAT NUMERIC, -- Interest rate
  SO_TIEN_GIAI_NGAN NUMERIC, -- Disbursed amount
  DU_NO NUMERIC, -- Outstanding principal
  DU_NO_LAI NUMERIC, -- Outstanding interest
  NGAY_GIAI_NGAN DATE, -- Disbursement date
  NGAY_KY_HOP_DONG DATE, -- Contract signing date
  MUC_DICH_VAY VARCHAR(250), -- Loan purpose
  NHOM_NO_THEO_HD_DPD VARCHAR(3), -- Debt group based on DPD
  STATUS VARCHAR(50) -- Derived status, e.g., 'Active', 'Closed', 'Overdue'
);

COMMENT ON TABLE DEBT_CUSTOMER_LD_DETAIL IS 'Master loan contract details per customer';
COMMENT ON COLUMN DEBT_CUSTOMER_LD_DETAIL.SO_HOP_DONG IS 'Loan contract number, primary key';
COMMENT ON COLUMN DEBT_CUSTOMER_LD_DETAIL.CUSTOMER_ID IS 'Foreign key referencing DEBT_CUSTOMERS';
COMMENT ON COLUMN DEBT_CUSTOMER_LD_DETAIL.LD_NO IS 'Loan number';
COMMENT ON COLUMN DEBT_CUSTOMER_LD_DETAIL.LD_DI_NO IS 'Disbursement number associated with the loan';
COMMENT ON COLUMN DEBT_CUSTOMER_LD_DETAIL.KY_HAN_VAY IS 'Loan term (e.g., in months)';
COMMENT ON COLUMN DEBT_CUSTOMER_LD_DETAIL.LAI_SUAT IS 'Interest rate per period';
COMMENT ON COLUMN DEBT_CUSTOMER_LD_DETAIL.SO_TIEN_GIAI_NGAN IS 'Amount disbursed for the loan';
COMMENT ON COLUMN DEBT_CUSTOMER_LD_DETAIL.DU_NO IS 'Current outstanding principal balance';
COMMENT ON COLUMN DEBT_CUSTOMER_LD_DETAIL.DU_NO_LAI IS 'Current outstanding interest balance';
COMMENT ON COLUMN DEBT_CUSTOMER_LD_DETAIL.NGAY_GIAI_NGAN IS 'Date the loan was disbursed';
COMMENT ON COLUMN DEBT_CUSTOMER_LD_DETAIL.NGAY_KY_HOP_DONG IS 'Date the loan contract was signed';
COMMENT ON COLUMN DEBT_CUSTOMER_LD_DETAIL.MUC_DICH_VAY IS 'Purpose of the loan';
COMMENT ON COLUMN DEBT_CUSTOMER_LD_DETAIL.NHOM_NO_THEO_HD_DPD IS 'Debt classification group based on Days Past Due for the contract';
COMMENT ON COLUMN DEBT_CUSTOMER_LD_DETAIL.STATUS IS 'Status of the loan, derived from internal DPD columns';

-- -----------------------------------------------------
-- Table DEBT_LD_REPAY_SCHEDULE
-- Description: Planned instalment schedule for each loan
-- -----------------------------------------------------
CREATE TABLE DEBT_LD_REPAY_SCHEDULE (
  SO_HOP_DONG VARCHAR(20) REFERENCES DEBT_CUSTOMER_LD_DETAIL(SO_HOP_DONG),
  KY_THANH_TOAN NUMERIC, -- Instalment number
  TU_NGAY DATE, -- Start date of instalment period
  DEN_NGAY DATE, -- End date of instalment period
  GOC NUMERIC, -- Principal amount for the instalment
  LAI NUMERIC, -- Interest amount for the instalment
  EMI_AMOUNT NUMERIC, -- Total EMI (Equated Monthly Instalment)
  DU_NO NUMERIC, -- Outstanding principal after this instalment (planned)
  PRIMARY KEY (SO_HOP_DONG, KY_THANH_TOAN)
);

COMMENT ON TABLE DEBT_LD_REPAY_SCHEDULE IS 'Planned instalment schedule for each loan';
COMMENT ON COLUMN DEBT_LD_REPAY_SCHEDULE.SO_HOP_DONG IS 'Loan contract number, part of composite primary key, FK to DEBT_CUSTOMER_LD_DETAIL';
COMMENT ON COLUMN DEBT_LD_REPAY_SCHEDULE.KY_THANH_TOAN IS 'Instalment number/period, part of composite primary key';
COMMENT ON COLUMN DEBT_LD_REPAY_SCHEDULE.TU_NGAY IS 'Start date of the instalment period';
COMMENT ON COLUMN DEBT_LD_REPAY_SCHEDULE.DEN_NGAY IS 'Due date/End date of the instalment period';
COMMENT ON COLUMN DEBT_LD_REPAY_SCHEDULE.GOC IS 'Principal component of the instalment';
COMMENT ON COLUMN DEBT_LD_REPAY_SCHEDULE.LAI IS 'Interest component of the instalment';
COMMENT ON COLUMN DEBT_LD_REPAY_SCHEDULE.EMI_AMOUNT IS 'Total amount due for the instalment (GOC + LAI)';
COMMENT ON COLUMN DEBT_LD_REPAY_SCHEDULE.DU_NO IS 'Planned outstanding principal balance after this instalment is paid';

-- -----------------------------------------------------
-- Table DEBT_LD_PAID_HISTORY
-- Description: Actual payments posted against instalments
-- -----------------------------------------------------
CREATE TABLE DEBT_LD_PAID_HISTORY (
  TRANSACTION_ID SERIAL PRIMARY KEY, -- Added a surrogate key for easier unique identification of payments
  SO_HOP_DONG VARCHAR(20) REFERENCES DEBT_CUSTOMER_LD_DETAIL(SO_HOP_DONG),
  NGAY_THANH_TOAN DATE, -- Payment date
  KY_THANH_TOAN NUMERIC, -- Instalment number paid against
  GOC_DA_THU NUMERIC, -- Principal amount collected
  LAI_DA_THU NUMERIC, -- Interest amount collected
  TONG_TIEN_THU NUMERIC, -- Total amount collected
  DPD_HOP_DONG_SAU_TT NUMERIC -- Days Past Due for the contract after this payment
);

COMMENT ON TABLE DEBT_LD_PAID_HISTORY IS 'Actual payments posted against instalments';
COMMENT ON COLUMN DEBT_LD_PAID_HISTORY.TRANSACTION_ID IS 'Unique identifier for each payment transaction';
COMMENT ON COLUMN DEBT_LD_PAID_HISTORY.SO_HOP_DONG IS 'Loan contract number, FK to DEBT_CUSTOMER_LD_DETAIL';
COMMENT ON COLUMN DEBT_LD_PAID_HISTORY.NGAY_THANH_TOAN IS 'Date the payment was made';
COMMENT ON COLUMN DEBT_LD_PAID_HISTORY.KY_THANH_TOAN IS 'Instalment period this payment is applied to';
COMMENT ON COLUMN DEBT_LD_PAID_HISTORY.GOC_DA_THU IS 'Portion of the payment applied to principal';
COMMENT ON COLUMN DEBT_LD_PAID_HISTORY.LAI_DA_THU IS 'Portion of the payment applied to interest';
COMMENT ON COLUMN DEBT_LD_PAID_HISTORY.TONG_TIEN_THU IS 'Total amount received in this payment';
COMMENT ON COLUMN DEBT_LD_PAID_HISTORY.DPD_HOP_DONG_SAU_TT IS 'Days Past Due of the contract after this payment was posted';


-- -----------------------------------------------------
-- Table DEBT_CUSTOMER_ALLOCATED_HIST
-- Description: Allocation history of loans to collection users
-- -----------------------------------------------------
CREATE TABLE DEBT_CUSTOMER_ALLOCATED_HIST (
  ALLOCATION_ID SERIAL PRIMARY KEY, -- Added a surrogate key
  SO_HOP_DONG VARCHAR(15) REFERENCES DEBT_CUSTOMER_LD_DETAIL(SO_HOP_DONG),
  DPD_KH NUMERIC, -- Days Past Due for the customer at time of allocation
  BUCKET_CODE VARCHAR(20),
  ALLOCATED_GROUP_CODE VARCHAR(20),
  ALLOCATED_USER_CODE VARCHAR(20),
  LAST_ALLOCATED_DATE DATE
);

COMMENT ON TABLE DEBT_CUSTOMER_ALLOCATED_HIST IS 'Allocation history of loans to collection users';
COMMENT ON COLUMN DEBT_CUSTOMER_ALLOCATED_HIST.ALLOCATION_ID IS 'Unique identifier for each allocation record';
COMMENT ON COLUMN DEBT_CUSTOMER_ALLOCATED_HIST.SO_HOP_DONG IS 'Loan contract number, FK to DEBT_CUSTOMER_LD_DETAIL';
COMMENT ON COLUMN DEBT_CUSTOMER_ALLOCATED_HIST.DPD_KH IS 'Customer''s Days Past Due at the time of this allocation';
COMMENT ON COLUMN DEBT_CUSTOMER_ALLOCATED_HIST.BUCKET_CODE IS 'Debt bucket code at the time of allocation';
COMMENT ON COLUMN DEBT_CUSTOMER_ALLOCATED_HIST.ALLOCATED_GROUP_CODE IS 'Code of the group the loan was allocated to';
COMMENT ON COLUMN DEBT_CUSTOMER_ALLOCATED_HIST.ALLOCATED_USER_CODE IS 'Code of the user the loan was allocated to';
COMMENT ON COLUMN DEBT_CUSTOMER_ALLOCATED_HIST.LAST_ALLOCATED_DATE IS 'Date of this allocation';


-- -----------------------------------------------------
-- Indexes
-- -----------------------------------------------------
-- Indexes for DEBT_CUSTOMERS
CREATE INDEX idx_debt_customers_sdt ON DEBT_CUSTOMERS(SO_DIEN_THOAI);
CREATE INDEX idx_debt_customers_cmnd ON DEBT_CUSTOMERS(SO_CMND_THE_CAN_CUOC);
CREATE INDEX idx_debt_customers_bucket ON DEBT_CUSTOMERS(BUCKET_CODE);

-- Indexes for DEBT_CUSTOMER_LD_DETAIL
CREATE INDEX idx_debt_customer_ld_detail_customer_id ON DEBT_CUSTOMER_LD_DETAIL(CUSTOMER_ID);
CREATE INDEX idx_debt_customer_ld_detail_ngay_giai_ngan ON DEBT_CUSTOMER_LD_DETAIL(NGAY_GIAI_NGAN);
CREATE INDEX idx_debt_customer_ld_detail_status ON DEBT_CUSTOMER_LD_DETAIL(STATUS);
CREATE INDEX idx_debt_customer_ld_detail_nhom_no ON DEBT_CUSTOMER_LD_DETAIL(NHOM_NO_THEO_HD_DPD);


-- Indexes for DEBT_LD_REPAY_SCHEDULE (Primary Key SO_HOP_DONG, KY_THANH_TOAN already indexed)
-- No additional separate index on SO_HOP_DONG needed if it's the leading part of PK.

-- Indexes for DEBT_LD_PAID_HISTORY
CREATE INDEX idx_debt_ld_paid_history_so_hop_dong ON DEBT_LD_PAID_HISTORY(SO_HOP_DONG);
CREATE INDEX idx_debt_ld_paid_history_ngay_thanh_toan ON DEBT_LD_PAID_HISTORY(NGAY_THANH_TOAN);
CREATE INDEX idx_debt_ld_paid_history_ky_thanh_toan ON DEBT_LD_PAID_HISTORY(KY_THANH_TOAN);

-- Indexes for DEBT_CUSTOMER_ALLOCATED_HIST
CREATE INDEX idx_debt_customer_allocated_hist_so_hop_dong ON DEBT_CUSTOMER_ALLOCATED_HIST(SO_HOP_DONG);
CREATE INDEX idx_debt_customer_allocated_hist_user_code ON DEBT_CUSTOMER_ALLOCATED_HIST(ALLOCATED_USER_CODE);
CREATE INDEX idx_debt_customer_allocated_hist_group_code ON DEBT_CUSTOMER_ALLOCATED_HIST(ALLOCATED_GROUP_CODE);
CREATE INDEX idx_debt_customer_allocated_hist_last_allocated_date ON DEBT_CUSTOMER_ALLOCATED_HIST(LAST_ALLOCATED_DATE);


-- -----------------------------------------------------
-- Mock Data
-- -----------------------------------------------------

-- Mock Data for DEBT_CUSTOMERS Table (15 records)
INSERT INTO DEBT_CUSTOMERS (CUSTOMER_ID, HO_TEN_DAY_DU, SO_CMND_THE_CAN_CUOC, SO_DIEN_THOAI, EMAIL, DU_NO, DU_NO_LAI, BUCKET_CODE) VALUES
(1001, 'Nguyễn Văn An', '001080001234', '0901234567', 'an.nguyen@example.com', 65000000, 650000, 'BKT01'), -- Updated DU_NO
(1002, 'Trần Thị Bình', '001081005678', '0912345678', 'binh.tran@example.com', 100000000, 1500000, 'BKT02'), -- Updated DU_NO
(1003, 'Lê Văn Cường', '001082009012', '0987654321', 'cuong.le@example.com', 30000000, 300000, 'BKT01'),
(1004, 'Phạm Thị Dung', '001083003456', '0976543210', 'dung.pham@example.com', 120000000, 2500000, 'BKT03'),
(1005, 'Hoàng Văn Em', '001084007890', '0965432109', 'em.hoang@example.com', 10000000, 100000, 'BKT00'),
(1006, 'Vũ Thị Giang', '001085001235', '0905678123', 'giang.vu@example.com', 200000000, 5000000, 'BKT04'),
(1007, 'Đặng Văn Hùng', '001086005679', '0916789234', 'hung.dang@example.com', 80000000, 900000, 'BKT01'), -- Updated DU_NO
(1008, 'Bùi Thị Kiều', '001087009013', '0985432765', 'kieu.bui@example.com', 0, 0, 'BKT00'),
(1009, 'Ngô Văn Lâm', '001088003457', '0974321876', 'lam.ngo@example.com', 90000000, 1500000, 'BKT02'),
(1010, 'Trịnh Thị Mai', '001089007891', '0963210987', 'mai.trinh@example.com', 45000000, 400000, 'BKT01'),
(1011, 'Đỗ Văn Khoa', '001090001236', '0901112233', 'khoa.do@example.com', 25000000, 200000, 'BKT01'),
(1012, 'Nguyễn Thu Thảo', '001091005680', '0902223344', 'thao.nguyen@example.com', 55000000, 550000, 'BKT01'),
(1013, 'Phan Đình Tùng', '001092009014', '0913334455', 'tung.phan@example.com', 150000000, 3000000, 'BKT03'),
(1014, 'Trần Minh Quang', '001093003458', '0984445566', 'quang.tran@example.com', 70000000, 700000, 'BKT02'),
(1015, 'Lý Thị Hoa', '001094007892', '0965556677', 'hoa.ly@example.com', 5000000, 50000, 'BKT00');


-- Mock Data for DEBT_CUSTOMER_LD_DETAIL Table (16 records)
-- Assuming CURRENT_DATE is around 2025-06-01 for realistic past dates
INSERT INTO DEBT_CUSTOMER_LD_DETAIL (SO_HOP_DONG, CUSTOMER_ID, LD_NO, LD_DI_NO, KY_HAN_VAY, LAI_SUAT, SO_TIEN_GIAI_NGAN, DU_NO, DU_NO_LAI, NGAY_GIAI_NGAN, NGAY_KY_HOP_DONG, MUC_DICH_VAY, NHOM_NO_THEO_HD_DPD, STATUS) VALUES
('HD0000000000001', 1001, 'LD001A', 'D01', 12, 10.5, 50000000, 30000000, 300000, CURRENT_DATE - INTERVAL '6 months', CURRENT_DATE - INTERVAL '6 months' - INTERVAL '2 days', 'Mua sắm cá nhân', 'N1', 'Active'),
('HD0000000000002', 1002, 'LD002A', 'D01', 24, 9.8, 75000000, 65000000, 900000, CURRENT_DATE - INTERVAL '1 year', CURRENT_DATE - INTERVAL '1 year' - INTERVAL '3 days', 'Sửa chữa nhà cửa', 'N2', 'Active'),
('HD0000000000003', 1003, 'LD003A', 'D01', 6, 12.0, 30000000, 10000000, 100000, CURRENT_DATE - INTERVAL '3 months', CURRENT_DATE - INTERVAL '3 months' - INTERVAL '1 day', 'Du lịch', 'N1', 'Active'),
('HD0000000000004', 1004, 'LD004A', 'D01', 36, 11.2, 120000000, 110000000, 2000000, CURRENT_DATE - INTERVAL '2 months', CURRENT_DATE - INTERVAL '2 months' - INTERVAL '5 days', 'Đầu tư kinh doanh nhỏ', 'N3', 'Overdue'),
('HD0000000000005', 1005, 'LD005A', 'D01', 12, 10.0, 10000000, 0, 0, CURRENT_DATE - INTERVAL '13 months', CURRENT_DATE - INTERVAL '13 months' - INTERVAL '2 days', 'Mua điện thoại', 'N0', 'Paid Off'),
('HD0000000000006', 1006, 'LD006A', 'D01', 48, 9.5, 200000000, 180000000, 4500000, CURRENT_DATE - INTERVAL '1.5 years', CURRENT_DATE - INTERVAL '1.5 years' - INTERVAL '3 days', 'Mua ô tô', 'N4', 'Overdue'),
('HD0000000000007', 1001, 'LD001B', 'D01', 6, 11.0, 20000000, 15000000, 150000, CURRENT_DATE - INTERVAL '2 months', CURRENT_DATE - INTERVAL '2 months' - INTERVAL '1 day', 'Tiêu dùng khác', 'N1', 'Active'),
('HD0000000000008', 1009, 'LD009A', 'D01', 18, 10.2, 90000000, 70000000, 1000000, CURRENT_DATE - INTERVAL '8 months', CURRENT_DATE - INTERVAL '8 months' - INTERVAL '4 days', 'Học phí', 'N2', 'Active'),
('HD0000000000009', 1010, 'LD010A', 'D01', 12, 10.8, 45000000, 25000000, 200000, CURRENT_DATE - INTERVAL '5 months', CURRENT_DATE - INTERVAL '5 months' - INTERVAL '2 days', 'Mua sắm đồ gia dụng', 'N1', 'Active'),
('HD0000000000010', 1011, 'LD011A', 'D01', 12, 11.5, 25000000, 20000000, 150000, CURRENT_DATE - INTERVAL '1 month', CURRENT_DATE - INTERVAL '1 month' - INTERVAL '1 day', 'Kinh doanh online', 'N1', 'Active'),
('HD0000000000011', 1012, 'LD012A', 'D01', 18, 10.0, 55000000, 45000000, 400000, CURRENT_DATE - INTERVAL '4 months', CURRENT_DATE - INTERVAL '4 months' - INTERVAL '2 days', 'Mua xe máy', 'N1', 'Active'),
('HD0000000000012', 1013, 'LD013A', 'D01', 36, 9.0, 150000000, 140000000, 2500000, CURRENT_DATE - INTERVAL '1 month', CURRENT_DATE - INTERVAL '1 month' - INTERVAL '3 days', 'Mua nhà đất', 'N1', 'Active'),
('HD0000000000013', 1014, 'LD014A', 'D01', 24, 11.8, 70000000, 60000000, 600000, CURRENT_DATE - INTERVAL '7 months', CURRENT_DATE - INTERVAL '7 months' - INTERVAL '1 day', 'Đám cưới', 'N2', 'Active'),
('HD0000000000014', 1015, 'LD015A', 'D01', 6, 12.5, 5000000, 0, 0, CURRENT_DATE - INTERVAL '7 months', CURRENT_DATE - INTERVAL '7 months' - INTERVAL '2 days', 'Khám chữa bệnh', 'N0', 'Paid Off'),
('HD0000000000015', 1002, 'LD002B', 'D01', 12, 10.0, 25000000, 20000000, 200000, CURRENT_DATE - INTERVAL '3 months', CURRENT_DATE - INTERVAL '3 months' - INTERVAL '1 day', 'Đầu tư chứng khoán', 'N1', 'Active'),
('HD0000000000016', 1007, 'LD007B', 'D01', 24, 9.2, 20000000, 18000000, 150000, CURRENT_DATE - INTERVAL '1 month', CURRENT_DATE - INTERVAL '1 month' - INTERVAL '2 days', 'Thanh toán thẻ tín dụng', 'N1', 'Active');

-- Mock Data for DEBT_LD_REPAY_SCHEDULE Table (20 records)
-- For HD0000000000001 (Customer 1001)
INSERT INTO DEBT_LD_REPAY_SCHEDULE (SO_HOP_DONG, KY_THANH_TOAN, TU_NGAY, DEN_NGAY, GOC, LAI, EMI_AMOUNT, DU_NO) VALUES
('HD0000000000001', 1, CURRENT_DATE - INTERVAL '6 months', CURRENT_DATE - INTERVAL '5 months', 4000000, 437500, 4437500, 46000000),
('HD0000000000001', 2, CURRENT_DATE - INTERVAL '5 months', CURRENT_DATE - INTERVAL '4 months', 4000000, 402500, 4402500, 42000000),
('HD0000000000001', 3, CURRENT_DATE - INTERVAL '4 months', CURRENT_DATE - INTERVAL '3 months', 4000000, 367500, 4367500, 38000000),
('HD0000000000001', 4, CURRENT_DATE - INTERVAL '3 months', CURRENT_DATE - INTERVAL '2 months', 4000000, 332500, 4332500, 34000000),
('HD0000000000001', 5, CURRENT_DATE - INTERVAL '2 months', CURRENT_DATE - INTERVAL '1 month', 4000000, 297500, 4297500, 30000000);

-- For HD0000000000002 (Customer 1002)
INSERT INTO DEBT_LD_REPAY_SCHEDULE (SO_HOP_DONG, KY_THANH_TOAN, TU_NGAY, DEN_NGAY, GOC, LAI, EMI_AMOUNT, DU_NO) VALUES
('HD0000000000002', 1, CURRENT_DATE - INTERVAL '12 months', CURRENT_DATE - INTERVAL '11 months', 3000000, 612500, 3612500, 72000000),
('HD0000000000002', 2, CURRENT_DATE - INTERVAL '11 months', CURRENT_DATE - INTERVAL '10 months', 3000000, 588000, 3588000, 69000000),
('HD0000000000002', 3, CURRENT_DATE - INTERVAL '10 months', CURRENT_DATE - INTERVAL '9 months', 3000000, 563500, 3563500, 66000000);

-- For HD0000000000004 (Customer 1004) - Overdue loan
INSERT INTO DEBT_LD_REPAY_SCHEDULE (SO_HOP_DONG, KY_THANH_TOAN, TU_NGAY, DEN_NGAY, GOC, LAI, EMI_AMOUNT, DU_NO) VALUES
('HD0000000000004', 1, CURRENT_DATE - INTERVAL '2 months', CURRENT_DATE - INTERVAL '1 month', 3000000, 1120000, 4120000, 117000000),
('HD0000000000004', 2, CURRENT_DATE - INTERVAL '1 month', CURRENT_DATE, 3000000, 1092000, 4092000, 114000000);

-- For HD0000000000005 (Customer 1005) - Paid off loan (example of a few past installments)
INSERT INTO DEBT_LD_REPAY_SCHEDULE (SO_HOP_DONG, KY_THANH_TOAN, TU_NGAY, DEN_NGAY, GOC, LAI, EMI_AMOUNT, DU_NO) VALUES
('HD0000000000005', 1, CURRENT_DATE - INTERVAL '13 months', CURRENT_DATE - INTERVAL '12 months', 800000, 83333, 883333, 9200000),
('HD0000000000005', 12, CURRENT_DATE - INTERVAL '2 months', CURRENT_DATE - INTERVAL '1 month', 800000, 6667, 806667, 0);

-- For HD0000000000007 (Customer 1001, second loan)
INSERT INTO DEBT_LD_REPAY_SCHEDULE (SO_HOP_DONG, KY_THANH_TOAN, TU_NGAY, DEN_NGAY, GOC, LAI, EMI_AMOUNT, DU_NO) VALUES
('HD0000000000007', 1, CURRENT_DATE - INTERVAL '2 months', CURRENT_DATE - INTERVAL '1 month', 3200000, 183333, 3383333, 16800000),
('HD0000000000007', 2, CURRENT_DATE - INTERVAL '1 month', CURRENT_DATE, 3200000, 154000, 3354000, 13600000),
('HD0000000000007', 3, CURRENT_DATE, CURRENT_DATE + INTERVAL '1 month', 3200000, 124667, 3324667, 10400000);

-- For HD0000000000010 (Customer 1011)
INSERT INTO DEBT_LD_REPAY_SCHEDULE (SO_HOP_DONG, KY_THANH_TOAN, TU_NGAY, DEN_NGAY, GOC, LAI, EMI_AMOUNT, DU_NO) VALUES
('HD0000000000010', 1, CURRENT_DATE - INTERVAL '1 month', CURRENT_DATE, 2000000, 239583, 2239583, 23000000),
('HD0000000000010', 2, CURRENT_DATE, CURRENT_DATE + INTERVAL '1 month', 2000000, 220417, 2220417, 21000000),
('HD0000000000010', 3, CURRENT_DATE + INTERVAL '1 month', CURRENT_DATE + INTERVAL '2 months', 2000000, 201250, 2201250, 19000000);

-- For HD0000000000011 (Customer 1012)
INSERT INTO DEBT_LD_REPAY_SCHEDULE (SO_HOP_DONG, KY_THANH_TOAN, TU_NGAY, DEN_NGAY, GOC, LAI, EMI_AMOUNT, DU_NO) VALUES
('HD0000000000011', 1, CURRENT_DATE - INTERVAL '4 months', CURRENT_DATE - INTERVAL '3 months', 2900000, 458333, 3358333, 52100000),
('HD0000000000011', 2, CURRENT_DATE - INTERVAL '3 months', CURRENT_DATE - INTERVAL '2 months', 2900000, 434167, 3334167, 49200000);


-- Mock Data for DEBT_LD_PAID_HISTORY Table (14 records)
-- Payments for HD0000000000001
INSERT INTO DEBT_LD_PAID_HISTORY (SO_HOP_DONG, NGAY_THANH_TOAN, KY_THANH_TOAN, GOC_DA_THU, LAI_DA_THU, TONG_TIEN_THU, DPD_HOP_DONG_SAU_TT) VALUES
('HD0000000000001', CURRENT_DATE - INTERVAL '5 months' + INTERVAL '3 days', 1, 4000000, 437500, 4437500, 0),
('HD0000000000001', CURRENT_DATE - INTERVAL '4 months' + INTERVAL '1 day', 2, 4000000, 402500, 4402500, 0),
('HD0000000000001', CURRENT_DATE - INTERVAL '3 months' - INTERVAL '2 days', 3, 4000000, 367500, 4367500, 0);

-- Payments for HD0000000000002 (partial payment for one installment)
INSERT INTO DEBT_LD_PAID_HISTORY (SO_HOP_DONG, NGAY_THANH_TOAN, KY_THANH_TOAN, GOC_DA_THU, LAI_DA_THU, TONG_TIEN_THU, DPD_HOP_DONG_SAU_TT) VALUES
('HD0000000000002', CURRENT_DATE - INTERVAL '11 months' + INTERVAL '5 days', 1, 2000000, 612500, 2612500, 0),
('HD0000000000002', CURRENT_DATE - INTERVAL '10 months' + INTERVAL '10 days', 2, 3000000, 588000, 3588000, 5);

-- No payments for HD0000000000004 (Overdue loan)

-- Full payments for HD0000000000005 (Paid off loan)
INSERT INTO DEBT_LD_PAID_HISTORY (SO_HOP_DONG, NGAY_THANH_TOAN, KY_THANH_TOAN, GOC_DA_THU, LAI_DA_THU, TONG_TIEN_THU, DPD_HOP_DONG_SAU_TT) VALUES
('HD0000000000005', CURRENT_DATE - INTERVAL '12 months', 1, 800000, 83333, 883333, 0),
('HD0000000000005', CURRENT_DATE - INTERVAL '1 month', 12, 800000, 6667, 806667, 0);

-- Payments for HD0000000000003
INSERT INTO DEBT_LD_PAID_HISTORY (SO_HOP_DONG, NGAY_THANH_TOAN, KY_THANH_TOAN, GOC_DA_THU, LAI_DA_THU, TONG_TIEN_THU, DPD_HOP_DONG_SAU_TT) VALUES
('HD0000000000003', CURRENT_DATE - INTERVAL '2 months', 1, 5000000, 300000, 5300000, 0),
('HD0000000000003', CURRENT_DATE - INTERVAL '1 month', 2, 5000000, 250000, 5250000, 0);

-- Payment for HD0000000000007
INSERT INTO DEBT_LD_PAID_HISTORY (SO_HOP_DONG, NGAY_THANH_TOAN, KY_THANH_TOAN, GOC_DA_THU, LAI_DA_THU, TONG_TIEN_THU, DPD_HOP_DONG_SAU_TT) VALUES
('HD0000000000007', CURRENT_DATE - INTERVAL '1 month' + INTERVAL '2 days', 1, 3200000, 183333, 3383333, 0);

-- Payments for HD0000000000008
INSERT INTO DEBT_LD_PAID_HISTORY (SO_HOP_DONG, NGAY_THANH_TOAN, KY_THANH_TOAN, GOC_DA_THU, LAI_DA_THU, TONG_TIEN_THU, DPD_HOP_DONG_SAU_TT) VALUES
('HD0000000000008', CURRENT_DATE - INTERVAL '7 months', 1, 4800000, 765000, 5565000, 0),
('HD0000000000008', CURRENT_DATE - INTERVAL '6 months' + INTERVAL '3 days', 2, 4800000, 724200, 5524200, 3);

-- Payment for HD0000000000009
INSERT INTO DEBT_LD_PAID_HISTORY (SO_HOP_DONG, NGAY_THANH_TOAN, KY_THANH_TOAN, GOC_DA_THU, LAI_DA_THU, TONG_TIEN_THU, DPD_HOP_DONG_SAU_TT) VALUES
('HD0000000000009', CURRENT_DATE - INTERVAL '4 months', 1, 3500000, 405000, 3905000, 0);

-- Payment for HD0000000000010
INSERT INTO DEBT_LD_PAID_HISTORY (SO_HOP_DONG, NGAY_THANH_TOAN, KY_THANH_TOAN, GOC_DA_THU, LAI_DA_THU, TONG_TIEN_THU, DPD_HOP_DONG_SAU_TT) VALUES
('HD0000000000010', CURRENT_DATE - INTERVAL '0 days', 1, 2000000, 239583, 2239583, 0);

-- Full payments for HD0000000000014 (Paid off loan)
INSERT INTO DEBT_LD_PAID_HISTORY (SO_HOP_DONG, NGAY_THANH_TOAN, KY_THANH_TOAN, GOC_DA_THU, LAI_DA_THU, TONG_TIEN_THU, DPD_HOP_DONG_SAU_TT) VALUES
('HD0000000000014', CURRENT_DATE - INTERVAL '6 months', 1, 833333, 52083, 885416, 0),
('HD0000000000014', CURRENT_DATE - INTERVAL '1 month', 6, 833333, 8680, 842013, 0);


-- Mock Data for DEBT_CUSTOMER_ALLOCATED_HIST Table (11 records)
INSERT INTO DEBT_CUSTOMER_ALLOCATED_HIST (SO_HOP_DONG, DPD_KH, BUCKET_CODE, ALLOCATED_GROUP_CODE, ALLOCATED_USER_CODE, LAST_ALLOCATED_DATE) VALUES
('HD0000000000001', 0, 'BKT01', 'COLLECT_G1', 'USER001', CURRENT_DATE - INTERVAL '6 months'),
('HD0000000000002', 15, 'BKT02', 'COLLECT_G2', 'USER002', CURRENT_DATE - INTERVAL '10 months'),
('HD0000000000002', 20, 'BKT02', 'COLLECT_G2', 'USER003', CURRENT_DATE - INTERVAL '8 months'),
('HD0000000000004', 35, 'BKT03', 'COLLECT_G3', 'USER004', CURRENT_DATE - INTERVAL '1 month'),
('HD0000000000006', 95, 'BKT04', 'COLLECT_G4_SP', 'USER005', CURRENT_DATE - INTERVAL '3 months'),
('HD0000000000009', 5, 'BKT01', 'COLLECT_G1', 'USER001', CURRENT_DATE - INTERVAL '5 months'),
('HD0000000000003', 0, 'BKT01', 'COLLECT_G1', 'USER006', CURRENT_DATE - INTERVAL '3 months'),
('HD0000000000007', 2, 'BKT01', 'COLLECT_G1', 'USER001', CURRENT_DATE - INTERVAL '1 month'),
('HD0000000000008', 22, 'BKT02', 'COLLECT_G2', 'USER002', CURRENT_DATE - INTERVAL '6 months'),
('HD0000000000010', 0, 'BKT01', 'COLLECT_G1_NEW', 'USER007', CURRENT_DATE - INTERVAL '20 days'),
('HD0000000000011', 10, 'BKT01', 'COLLECT_G1', 'USER006', CURRENT_DATE - INTERVAL '3 months');

-- End of script
SELECT 'Script execution completed with full mock data.' AS status;

